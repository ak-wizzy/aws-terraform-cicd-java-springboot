# https://docs.aws.amazon.com/codebuild/latest/userguide/sample-runtime-versions.html
# https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
version: 0.2
env:
  variables:
    M2_HOME: "/root/.m2"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - java -version
  pre_build:
    commands:
      - java -version
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo build started on $(date)
      - mvn -e -X clean install
      - printenv
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG2 .
      - docker images -a
      - echo Building the Docker image...
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:dev2
      - docker images -a

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:dev2
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:dev > imagedefinitions.json
artifacts:
   files: imagedefinitions.json
cache:
  paths:
    - '/root/.m2/**/*'